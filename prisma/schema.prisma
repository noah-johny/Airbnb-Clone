generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  emailVerifiedAt DateTime?
  email           String?   @unique
  name            String?
  image           String?
  hashedPassword  String?
  favouriteIds    String[]  @db.ObjectId

  accounts     Account[]
  listings     Listing[]
  reservations Reservation[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  idToken           String? @db.String
  refreshToken      String? @db.String
  accessToken       String? @db.String
  tokenType         String?
  scope             String?
  sessionState      String?
  type              String
  provider          String
  providerAccountId String
  expiresAt         Int?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Listing {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String   @db.ObjectId
  createdAt     DateTime @default(now())
  title         String
  description   String
  imgSrc        String
  locationValue String
  category      Int
  roomCount     Int
  bathroomCount Int
  guestCount    Int
  price         Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  reservations Reservation[]
}

model Reservation {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  listingId  String   @db.ObjectId
  createdAt  DateTime @default(now())
  startDate  DateTime
  endDate    DateTime
  totalPrice Int

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}
